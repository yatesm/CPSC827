
//(-, FLAG20ON, -, -)

//(spillage, PROGRAMBEGIN, , )

EAX: 
EBX: 
ECX: 
EDX: 
ESI: 
EDI: 
Stack (Top): 
program -;
#include ( "stdlib.hhf" )

//(x, MEMORY, 1, -)

EAX: 
EBX: 
ECX: 
EDX: 
ESI: 
EDI: 
Stack (Top): 
static
x: dword;

//(MAIN, LABEL, -, -)

EAX: 
EBX: 
ECX: 
EDX: 
ESI: 
EDI: 
Stack (Top): 
begin -;
MAIN:

//(I$0, IADD, 1, 2)

EAX: 
EBX: 
ECX: 
EDX: 
ESI: 
EDI: 
Stack (Top): 
mov( 1, EAX );
add( 2, EAX );

//(I$1, IADD, 1, 2)

EAX: I$0
EBX: 
ECX: 
EDX: 
ESI: 
EDI: 
Stack (Top): 
mov( 1, EBX );
add( 2, EBX );

//(I$2, IADD, I$0, I$1)

EAX: I$0
EBX: I$1
ECX: 
EDX: 
ESI: 
EDI: 
Stack (Top): 
add( EBX, EAX );

//(I$3, IADD, 3, 4)

EAX: I$2
EBX: I$1
ECX: 
EDX: 
ESI: 
EDI: 
Stack (Top): 
mov( 3, ECX );
add( 4, ECX );

//(I$4, IADD, 5, 6)

EAX: I$2
EBX: I$1
ECX: I$3
EDX: 
ESI: 
EDI: 
Stack (Top): 
mov( 5, EDX );
add( 6, EDX );

//(I$5, IADD, 7, 8)

EAX: I$2
EBX: I$1
ECX: I$3
EDX: I$4
ESI: 
EDI: 
Stack (Top): 
mov( 7, ESI );
add( 8, ESI );

//(I$6, IADD, 9, 10)

EAX: I$2
EBX: I$1
ECX: I$3
EDX: I$4
ESI: I$5
EDI: 
Stack (Top): 
mov( 9, EDI );
add( 10, EDI );

//(I$7, IADD, 11, 12)

EAX: I$2
EBX: I$1
ECX: I$3
EDX: I$4
ESI: I$5
EDI: I$6
Stack (Top): 
mov( 11, EBX );
add( 12, EBX );

//(I$8, IADD, 13, 14)

EAX: I$2
EBX: I$7
ECX: I$3
EDX: I$4
ESI: I$5
EDI: I$6
Stack (Top): 
push( EAX );
mov( 13, EAX );
add( 14, EAX );

//(I$9, IADD, I$7, I$8)

EAX: I$8
EBX: I$7
ECX: I$3
EDX: I$4
ESI: I$5
EDI: I$6
Stack (Top):  I$2 
add( EAX, EBX );

//(I$10, IADD, I$6, I$9)

EAX: I$8
EBX: I$9
ECX: I$3
EDX: I$4
ESI: I$5
EDI: I$6
Stack (Top):  I$2 
add( EBX, EDI );

//(I$11, IADD, I$5, I$10)

EAX: I$8
EBX: I$9
ECX: I$3
EDX: I$4
ESI: I$5
EDI: I$10
Stack (Top):  I$2 
add( EDI, ESI );

//(I$12, IADD, I$4, I$11)

EAX: I$8
EBX: I$9
ECX: I$3
EDX: I$4
ESI: I$11
EDI: I$10
Stack (Top):  I$2 
add( ESI, EDX );

//(I$13, IADD, I$3, I$12)

EAX: I$8
EBX: I$9
ECX: I$3
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top):  I$2 
add( EDX, ECX );

//(I$14, IADD, I$2, I$13)

EAX: I$8
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top):  I$2 
pop( EAX );
add( ECX, EAX );

//(x, SUBSTORE, I$14, -)

EAX: I$14
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top): 
mov( EAX, x );

//(-, CALL, PRINTF, -)

EAX: I$14
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top): 

//(-, BEGINOUTPUTPARAMETER,  "%d", -)

EAX: I$14
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top): 
stdout.put(" ");

//(-, OUTPUTPARAMETER, x, 1)

EAX: I$14
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top): 
stdout.puti32Size(x, 1, ' ');

//(-, ENDOUTPUTPARAMETER, -, -)

EAX: I$14
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top): 

//(-, ENDOFCALCULATIONS, -, -)

EAX: I$14
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top): 

//(spillage, PROGRAMEND, -, -)

EAX: I$14
EBX: I$9
ECX: I$13
EDX: I$12
ESI: I$11
EDI: I$10
Stack (Top): 
stdout.put(nl);
end -;
